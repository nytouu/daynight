#!/bin/sh

xrdb merge $HOME/.config/x11/Xresources

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export LESSHISTFILE="-"
export CARGO_HOME="$HOME/.local/share/cargo"
export GOPATH="$HOME/.local/share/go"
export HISTFILE="$HOME/.local/share/history"

export QT_QPA_PLATFORMTHEME=kvantum
# export SDL_JOYSTICK_HIDAPI=0
export _JAVA_AWT_WM_NONPARENTING=1
export EDITOR="nvim"
export TERMINAL="st"
export BROWSER="librewolf"
export FILEBROWSER="Thunar"
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/nytou/.local/share/cargo/bin:/home/nytou/scripts:/home/nytou/.local/bin:/home/nytou/.dotnet/tools/"

# example dkrc to show some basic command usage and error reporting

# determine where to place the log file
logfile="$HOME/.dkrc.log"
[ -d "$HOME/.local/share/xorg" ] && logfile="$HOME/.local/share/xorg/dkrc.log"
: > "$logfile"


# (re)load sxhkd for keybinds
if hash sxhkd >/dev/null 2>&1; then
	pkill sxhkd
	sxhkd -c "$HOME/.config/dk/sxhkdrc" &
fi

{ # compound command to redirect all output

	# workspace settings
	# ------------------------

	# initialize 10 workspaces (1-10) (default: 1/monitor)
	dkcmd set numws=7

	# default workspace '_' values used when allocating new workspaces
	# can be applied to all existing workspaces when passed 'apply' after ws=_
	dkcmd set ws=_ apply layout=tile master=1 stack=3 gap=16 msplit=0.5 ssplit=0.5

	# change workspace names (default: number == name)
	dkcmd set \
		ws=1  name="" \
		ws=2  name="" \
		ws=3  name="" \
		ws=4  name="" \
		ws=5  name="" \
		ws=6  name="ﭮ" \
		ws=7  name="" \

	# enable static workspaces and assign them to monitors (only relevant for multiple monitors)
	# aside -
	#       many that come from other workspace models tried dk and requested this feature
	#       try embracing the default behaviour and allow access to any workspace from any monitor
	#       you might end up liking it :)
	#
	# mon1='DisplayPort-0'
	# mon2='HDMI-A-0'
	# dkcmd set static_ws=true \
	# 	ws=1  mon=$mon1 \
	# 	ws=2  mon=$mon1 \
	# 	ws=3  mon=$mon1 \
	# 	ws=4  mon=$mon1 \
	# 	ws=5  mon=$mon1 \
	# 	ws=6  mon=$mon2 \
	# 	ws=7  mon=$mon2 \
	# 	ws=8  mon=$mon2 \
	# 	ws=9  mon=$mon2 \
	# 	ws=10 mon=$mon2


	# global settings
	# ---------------------

	# focus windows when receiving activation and enable focus-follows-mouse
	dkcmd set focus_open=true focus_urgent=false focus_mouse=true

	# place clients at the tail and ignore size hints on tiled windows
	dkcmd set tile_tohead=1 tile_hints=false

	# minimum width/height for resizing, and minimum allowed on-screen when moving
	dkcmd set win_minwh=50 win_minxy=10

	# disable gaps and borders in single window layouts
	dkcmd set smart_gap=true smart_border=true

	# define mouse mod and move/resize buttons
	dkcmd set mouse mod=mod4 move=button1 resize=button3


	# borders
	# ---------

	# traditional
	# set border width and colour for each window state
	# dkcmd set border width=1 colour focus='#6699cc' unfocus='#000000' urgent='#ee5555'

	# alternative
	# enable split borders and colours, width is overall width, outer width consumes some of width.
	# outer width must be less than width, outer width of 0 will be single borders
	dkcmd set border width=6 outer_width=4 \
		colour \
		focus='#89B4FA' \
		unfocus='#45475A' \
		urgent='#F38BA8' \
		outer_focus='#1E1E2E' \
		outer_unfocus='#1E1E2E' \
		outer_urgent='#1E1E2E'


	# window rules
	# --------------

	# rule class, instance, and title regexes (*ALWAYS* CASE INSENSITIVE)

	# open window(s) on a specific workspace (assigned monitor)
	dkcmd rule class="^discord$" ws=6

	# open window(s) and use a callback function (user defined in config.h)
	# we also ignore=true to stop the window from being resized on it's own from events
	# eg. mpv --x11-name=albumart /path/to/media
	dkcmd rule class="^mpv$" instance="^albumart$" float=true ignore=true callback=albumart bw=0

	# open window(s) in a floating state
	dkcmd rule class="^(nitrogen|Connman-gtk|Engrampa|Blueberry.py)$" float=true

	# open window(s) with a specific geometry and coordinates (floating only!)
	dkcmd rule class="^steam_proton$" title="^BakkesModInjectorCpp$" float=true

	dkcmd rule class="^st-256color$" title="^(pulsemixer|calcurse)$" float=true

	# apply current rule set to all existing windows (useful for WM reload/restart)
	dkcmd rule apply '*'

	# delete all rules
	# dkcmd rule remove '*'

} >> "$logfile" 2>&1 # append responses

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
	hash notify-send && notify-send -t 0 -u critical "dkrc has errors" \
		"$(awk '/error:/ {sub(/^error: /, ""); gsub(/</, "\<"); print}' "$logfile")"
	exit 1
fi

# autostart


xset s off
xset -dpms
xset s noblank
nitrogen --restore

if [ ! $(pgrep pipewire) ]; then
    /usr/bin/pipewire &
    # /usr/bin/pipewire-pulse &
    # /usr/bin/pipewire-media-session &
fi

if [ ! $(pgrep zscroll) ]; then
    mpcscroll &
fi

if [ ! $(pgrep unclutter) ]; then
	unclutter -idle 15 &
fi

xcalib -s 0 $HOME/docs/BenQ.icm
$HOME/.screenlayout/single.sh

lemonbar-dk &
picom &
xsettingsd &
mpd &
dunst &
lxpolkit &
discord &

exit 0
